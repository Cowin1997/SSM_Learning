<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--引入资源文件-->
    <!--<properties resource="xxx.properties"></properties>-->



    <!-- 配置全局配置底下的一些属性 -->
    <settings>
        <!--<setting name="mapUnderscoreToCamelCase" value="true"/>-->
        <setting name="logImpl" value="LOG4J"/>
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>


    <typeAliases>
        <!--***************************************方法.1********************************************-->
            <!-- typeAliases:为某个java类型取别名
            type:指定别名的类型的全类名; 默认的别名是类名小写
            alias: 指定新的别名
               -->
    <!--<typeAlias type="mybatis.myDao.LoginUser"  alias="loginuser" />-->

        <!--***********************************************************************************-->
        <!--*******************************************方法.2****************************************-->

        <!--package ：为某个包的所有类批量起别名
         name : 指定包名字(为当前包以及下面的子包每一个类都起一个默认的别名(类名首字母小写)
          如果包的子包下有两个类名相同的 mybatis会报错!
          这时候可以 通过对 类添加 @Alias 注解 起别名
         -->
        <!--<package name="mybatis.myDao"/>-->

        <!--***********************************************************************************-->

    </typeAliases>

    <!--environments: 配置多种环境 每一个environment配置一个具体的环境信息
        id 代表某个环境的标识 (test,development,debug,release)
        default 选择使用哪个环境,达到快速切换
        必须有如下两个标签:
        transactionManager： 事物管理器
            type:   事物管理器的类型 两种: [JDBC | MANAGED]{
                    对应于Configuration类 , JDBC | MANAGED只是注册的别名 具体实现如下
                JDBC : JdbcTransactionFactory.class
                MANAGED : ManagedTransactionFactory.class

                自定义事物管理器:实现TransactionFactory接口
            }



        dataSource:
            type: 数据源类型 {
                内置有三种： [ UNPOOLED|POOLED|JNDI ] 也是注册的别名
                 UNPOOLED: 不使用连接池,每次新起一个连接;
                 POOLEDL: 使用连接池;
                 自定义数据源: 实现接口;
            }


    -->




    <environments default="mysql">
        <environment id="mysql">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/login?characterEncoding=utf8&amp;serverTimezone=GMT"/>
                <property name="username" value="root"/>
                <property name="password" value="root"/>
            </dataSource>
        </environment>
    </environments>


    <!-- MyBatis 需要自己写sql语言,对于为了使在不同的数据库下使用不同的语言
          需要使用databaseIdProvider  全局配置 支持多数据库产商

         type： DB_VENDOR 也是注册的别名 对应于对应于Configuration类
         作用就是得到数据库产商的标识,mybatis就能根据数据库产商的标识来执行不同的sql语言
         标识由驱动getDatabaseProductionName()提供
         一些标识： MySQL  Oracle SQL Server

    -->

    <!-- 使用:
            在mapper文件中 使用databaseId 来使用 value 的别名
      -->



    <databaseIdProvider type="DB_VENDOR">
        <!-- 为不同的数据库产商取别名-->
        <property name="MySQL" value="mysql"></property>
        <!-- 使用Oracle需要导入oracle驱动,配置Oracle数据源,切换环境-->
        <property name="Oracle" value="oracle"></property>


    </databaseIdProvider>


    <!-- 将写好的sql映射文件(UserMapper.xml) 一定要注册到全局配置文件下 -->
    <!-- mappers下的每一个mapper 注册一个sql映射文件-->

    <mappers>
        <!-- 基于XMl 的 Mapper配置
        resource使用类路径下的;
        url:使用网络路径或则磁盘路径下的sql映射文件
        class:引用(注册)接口:
            1.有sql映射文件: 映射文件名必须和接口同名,并且放在同一个目录下, 这里如果放在resources目录下
            包名起和class所在包名一样则就会统一在一起;然后可以使用sqlSession.getMapper(Login.class);
            2. 基于注解的,没有sql映射文件
        -->
        <!--这里测试了同时对一个接口既使用xml又使用注解,会报错-->
        <!--<mapper resource="mybatis/interfaces/*"/>-->
        <!--<mapper resource="mybatis/interfaces/LoginPlus.xml"/>-->
        <!--通过 基于接口的 mapper配置 -->
        <!--<mapper class="mybatis.interfaces.Login"/>-->

        <!-- 通过包名字批量注册-->
        <package name="mybatis.interfaces"/>
    </mappers>



</configuration>